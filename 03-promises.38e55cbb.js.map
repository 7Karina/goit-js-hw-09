{"mappings":"oeAAAA,EAAA,SAEeC,SAASC,cAAc,SACnBC,SACjBF,SAASC,cAAc,uBAAuBE,OAE9BD,SAASF,SAASC,cAAc,sBAAsBE,OAJxE,MAKMC,EAAcF,SAClBF,SAASC,cAAc,wBAAwBE,OAGjD,SAASE,EAAcC,EAAUC,GAC/BC,YAAW,KACT,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,IAAIC,QAAQC,QAASC,QACjBL,EACFI,QAAQ,C,SAAEP,E,MAAUC,IAEpBO,OAAO,C,SAAER,E,MAAUC,GAAQ,G,CAKjC,IAAK,MAAMQ,EAAI,EAAGA,EAAIX,EAAaW,GAAK,EACtCV,EAAc,EAAG,MACdW,MAAK,EAACV,SAAEA,EAAQC,MAAEA,MACjBU,QAAQC,IAAI,uBAAqBZ,QAAiBC,MAAU,IAE7DY,OAAM,EAACb,SAAEA,EAAQC,MAAEA,MAClBU,QAAQC,IAAI,sBAAoBZ,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst delayInput = parseInt(\n  document.querySelector(\"input[name='delay']\").value\n);\nconst stepInput = parseInt(document.querySelector(\"input[name='step']\").value);\nconst amountInput = parseInt(\n  document.querySelector(\"input[name='amount']\").value\n);\n\nfunction createPromise(position, delay) {\n  setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n    new Promise(resolve, reject);\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nfor (const i = 0; i < amountInput; i += 1) {\n  createPromise(2, 1500)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["parcelRequire","document","querySelector","parseInt","value","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","setTimeout","shouldResolve","Math","random","Promise","resolve","reject","i","then","console","log","catch"],"version":3,"file":"03-promises.38e55cbb.js.map"}