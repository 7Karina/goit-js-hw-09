{"mappings":"gfAAAA,EAAA,SAEeC,SAASC,cAAc,SACnBC,SACjBF,SAASC,cAAc,uBAAuBE,OAE9BD,SAASF,SAASC,cAAc,sBAAsBE,OAJxE,IAKMC,EAAcF,SAClBF,SAASC,cAAc,wBAAwBE,OAGjD,SAASE,EAAcC,EAAUC,GAC/BC,YAAW,WACT,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,IAAIC,QAAQC,QAASC,QACjBL,EACFI,QAAQ,CAAEP,WAAUC,UAEpBO,OAAO,CAAER,WAAUC,S,IAKzB,IAAK,IAAMQ,EAAI,EAAGA,EAAIX,EAAaW,GAAK,EACtCV,EAAc,EAAG,MACdW,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MACjBW,QAAQC,IAAI,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,IAE3Dc,OAAM,SAAAJ,G,IAAGX,EAAQW,EAARX,SAAUC,EAAKU,EAALV,MAClBW,QAAQC,IAAI,sBAAqCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst delayInput = parseInt(\n  document.querySelector(\"input[name='delay']\").value\n);\nconst stepInput = parseInt(document.querySelector(\"input[name='step']\").value);\nconst amountInput = parseInt(\n  document.querySelector(\"input[name='amount']\").value\n);\n\nfunction createPromise(position, delay) {\n  setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n    new Promise(resolve, reject);\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nfor (const i = 0; i < amountInput; i += 1) {\n  createPromise(2, 1500)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["parcelRequire","document","querySelector","parseInt","value","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","setTimeout","shouldResolve","Math","random","Promise","resolve","reject","$ce04d3a99e08e73b$var$i","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.a1187e4c.js.map"}